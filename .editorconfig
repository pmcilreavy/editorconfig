# If you wanna change a setting maybe drop a comment in slack to see what everyone thinks first.

# Some useful references...

# http://editorconfig.org/
# http://editorconfig.org/#supported-properties
# https://docs.microsoft.com/en-us/visualstudio/ide/create-portable-custom-editor-options
# https://docs.microsoft.com/en-us/visualstudio/ide/editorconfig-code-style-settings-reference
# https://docs.microsoft.com/en-us/visualstudio/ide/editorconfig-naming-conventions
# https://kent-boogaart.com/blog/editorconfig-reference-for-c-developers
# https://www.jetbrains.com/help/resharper/EditorConfig_Index.html

root = true

[*]
indent_style = space

[*.{csproj,vbproj,vcxproj,vcxproj.filters,proj,projitems,shproj,props,targets,ruleset,config,nuspec,resx,vsixmanifest,vsct}]
indent_size = 2

[*.{xml,xaml}]
indent_size = 4

[*.json]
indent_size = 2

[*.{js,ts}]
indent_size = 4

[*.{html,htm}]
indent_size = 4

[*.cs]
# misc
dotnet_sort_system_directives_first                                       = true
max_line_length                                                           = 180

# indentation and white space
indent_size                                                               = 4
end_of_line                                                               = crlf
charset                                                                   = utf-8-bom
trim_trailing_whitespace                                                  = true
insert_final_newline                                                      = true
csharp_indent_block_contents                                              = true
csharp_indent_braces                                                      = false
csharp_indent_case_contents                                               = true
csharp_indent_labels                                                      = one_less_than_current
csharp_indent_switch_labels                                               = true
csharp_space_after_cast                                                   = false
csharp_space_after_colon_in_inheritance_clause                            = true
csharp_space_after_comma                                                  = true
csharp_space_after_dot                                                    = false
csharp_space_after_keywords_in_control_flow_statements                    = true
csharp_space_after_semicolon_in_for_statement                             = true
csharp_space_around_binary_operators                                      = before_and_after
csharp_space_around_declaration_statements                                = do_not_ignore
csharp_space_before_colon_in_inheritance_clause                           = true
csharp_space_before_comma                                                 = false
csharp_space_before_dot                                                   = false
csharp_space_before_open_square_brackets                                  = false
csharp_space_before_semicolon_in_for_statement                            = false
csharp_space_between_empty_square_brackets                                = false
csharp_space_between_method_call_empty_parameter_list_parentheses         = false
csharp_space_between_method_call_name_and_opening_parenthesis             = false
csharp_space_between_method_call_parameter_list_parentheses               = false
csharp_space_between_method_declaration_empty_parameter_list_parentheses  = false
csharp_space_between_method_declaration_name_and_open_parenthesis         = false
csharp_space_between_method_declaration_parameter_list_parentheses        = false
csharp_space_between_parentheses                                          = false
csharp_space_between_square_brackets                                      = false

# var usage
csharp_style_var_when_type_is_apparent                                    = true : suggestion
csharp_style_var_elsewhere                                                = true : suggestion
csharp_style_var_for_built_in_types                                       = true : suggestion

# Prefer method-like constructs to have a block body
csharp_style_expression_bodied_methods                                    = false : none
csharp_style_expression_bodied_constructors                               = false : none
csharp_style_expression_bodied_operators                                  = false : none

# Prefer property-like constructs to have an expression-body
csharp_style_expression_bodied_properties                                 = true : none
csharp_style_expression_bodied_indexers                                   = true : none
csharp_style_expression_bodied_accessors                                  = true : none

# Suggest more modern language features when available
csharp_style_pattern_matching_over_is_with_cast_check                     = true : suggestion
csharp_style_pattern_matching_over_as_with_null_check                     = true : suggestion
csharp_style_inlined_variable_declaration                                 = true : suggestion
csharp_style_throw_expression                                             = true : suggestion
csharp_style_conditional_delegate_call                                    = true : suggestion

# newline & brace settings
csharp_new_line_before_open_brace                                         = all
csharp_new_line_before_else                                               = true
csharp_new_line_before_catch                                              = true
csharp_new_line_before_finally                                            = true
csharp_new_line_before_members_in_object_initializers                     = true
csharp_new_line_before_members_in_anonymous_types                         = true
csharp_prefer_braces                                                      = true : error
csharp_preserve_single_line_blocks                                        = true
csharp_preserve_single_line_statements                                    = false
csharp_prefer_simple_default_expression                                   = true : suggestion
csharp_new_line_between_query_expression_clauses                          = true

# qualification with 'this' etc
dotnet_style_qualification_for_event                                      = false : warning
dotnet_style_qualification_for_field                                      = false : warning
dotnet_style_qualification_for_method                                     = false : warning
dotnet_style_qualification_for_property                                   = false : warning

# syntatic sugar preferences
dotnet_style_coalesce_expression                                          = true : suggestion
dotnet_style_collection_initializer                                       = true : suggestion
dotnet_style_explicit_tuple_names                                         = true : suggestion
dotnet_style_null_propagation                                             = true : suggestion
dotnet_style_object_initializer                                           = true : suggestion
dotnet_style_predefined_type_for_locals_parameters_members                = true : suggestion
dotnet_style_predefined_type_for_member_access                            = true : suggestion

# custom resharper settings
# https://www.jetbrains.com/help/resharper/EditorConfig_Index.html
# tabs, indents, alignment
# general
resharper_csharp_continuous_indent_multiplier                             = 1
# nested statements
resharper_csharp_indent_nested_usings_stmt                                = false
resharper_csharp_indent_nested_fixed_stmt                                 = false
resharper_csharp_indent_nested_lock_stmt                                  = false
resharper_csharp_indent_nested_for_stmt                                   = false
resharper_csharp_indent_nested_foreach_stmt                               = false
resharper_csharp_indent_nested_while_stmt                                 = false
# parenthesis
resharper_csharp_use_continuous_indent_inside_parens                      = true
resharper_csharp_indent_method_decl_pars                                  = inside
resharper_csharp_indent_invocation_pars                                   = inside
resharper_csharp_indent_statement_pars                                    = inside
resharper_csharp_indent_typeparam_angles                                  = inside
resharper_csharp_indent_typearg_angles                                    = inside
resharper_csharp_indent_pars                                              = inside
# preprocessor directives
resharper_csharp_indent_preprocessor_if                                   = no_indent
resharper_csharp_indent_preprocessor_region                               = usual_indent
resharper_csharp_indent_preprocessor_other                                = no_indent
# other idents
resharper_csharp_indent_type_constraints                                  = true
resharper_csharp_stick_comment                                            = true
# allow multiline constructs
resharper_csharp_alignment_tab_fill_style                                 = use_spaces
resharper_csharp_align_multiline_parameter                                = true
resharper_csharp_align_multiline_extends_list                             = false
resharper_csharp_align_linq_query                                         = false
resharper_csharp_align_multiline_binary_expressions_chain                 = true
resharper_csharp_outdent_binary_ops                                       = false
resharper_csharp_align_multiline_calls_chain                              = true
resharper_csharp_outdent_dots                                             = false
resharper_csharp_align_multiline_array_and_object_initializer             = false
resharper_csharp_indent_anonymous_method_block                            = false
resharper_csharp_align_first_arg_by_paren                                 = true
resharper_csharp_align_multiline_argument                                 = true
resharper_csharp_align_tuple_components                                   = false
resharper_csharp_align_multiline_expression                               = false
resharper_csharp_align_multiline_for_stmt                                 = true
resharper_csharp_align_multiple_declaration                               = false
resharper_csharp_align_multline_type_parameter_list                       = false
resharper_csharp_align_multline_type_parameter_constrains                 = false
resharper_csharp_outdent_commas                                           = false
# align similar code in columns
resharper_csharp_int_align_fields                                         = false
resharper_csharp_int_align_properties                                     = false
resharper_csharp_int_align_methods                                        = false
resharper_csharp_int_align_parameters                                     = false
resharper_csharp_int_align_variables                                      = false
resharper_csharp_int_align_assignments                                    = false
resharper_csharp_int_align_nested_ternary                                 = false
resharper_csharp_int_align_invocations                                    = false
resharper_csharp_int_align_binary_expressions                             = false
resharper_csharp_int_align_comments                                       = false
resharper_csharp_int_align_switch_sections                                = false
# braces layout
resharper_csharp_allow_comment_after_lbrace                               = false
resharper_csharp_empty_block_style                                        = multiline
# blank lines
# general
resharper_csharp_blank_lines_around_region                                = 1
resharper_csharp_blank_lines_inside_region                                = 1
resharper_csharp_blank_lines_before_single_line_comment                   = 0
# blank lines in declarations
resharper_csharp_keep_blank_lines_in_declarations                         = 2
resharper_csharp_remove_blank_lines_near_braces_in_declarations           = true
resharper_csharp_blank_lines_after_start_comment                          = 1
resharper_csharp_blank_lines_between_using_groups                         = 0
resharper_csharp_blank_lines_after_using_list                             = 1
resharper_csharp_blank_lines_around_namespace                             = 1
resharper_csharp_blank_lines_inside_namespace                             = 0
resharper_csharp_blank_lines_around_type                                  = 1
resharper_csharp_blank_lines_inside_type                                  = 0
resharper_csharp_blank_lines_around_field                                 = 1
resharper_csharp_blank_lines_around_single_line_field                     = 0
resharper_csharp_blank_lines_around_property                              = 1
resharper_csharp_blank_lines_around_single_line_property                  = 0
resharper_csharp_blank_lines_around_auto_property                         = 1
resharper_csharp_blank_lines_around_single_line_auto_property             = 0
resharper_csharp_blank_lines_around_invocable                             = 1
resharper_csharp_blank_lines_around_single_line_invocable                 = 0
# blank lines in code
resharper_csharp_keep_blank_lines_in_code                                 = 2
resharper_csharp_remove_blank_lines_near_braces_in_code                   = true
resharper_csharp_blank_lines_around_local_method                          = 1
resharper_csharp_blank_lines_around_single_line_local_method              = 0
resharper_csharp_blank_lines_before_control_transfer_statements           = 0
resharper_csharp_blank_lines_after_control_transfer_statements            = 0
resharper_csharp_blank_lines_before_block_statements                      = 0
resharper_csharp_blank_lines_after_block_statements                       = 1
resharper_csharp_blank_lines_before_multiline_statements                  = 0
resharper_csharp_blank_lines_after_multiline_statements                   = 0
# line breaks
# general
resharper_csharp_keep_user_linebreaks                                     = true
resharper_csharp_wrap_before_comma                                        = false
resharper_csharp_special_else_if_treatment                                = true
# arrangement of attributes
resharper_csharp_max_attribute_length_for_same_line                       = 38
resharper_csharp_keep_existing_attribute_arrangement                      = false
resharper_csharp_place_type_attribute_on_same_line                        = never
resharper_csharp_place_method_attribute_on_same_line                      = never
resharper_csharp_place_accessorholder_attribute_on_same_line              = never
resharper_csharp_place_accessor_attribute_on_same_line                    = if_owner_is_single_line
resharper_csharp_place_field_attribute_on_same_line                       = always
# arrangement of method signature
resharper_csharp_wrap_parameters_style                                    = chop_if_long
resharper_csharp_wrap_before_declaration_lpar                             = false
resharper_csharp_wrap_after_declaration_lpar                              = false
resharper_csharp_place_constructor_initializer_on_same_line               = true
# arrangement of expression bodied members
resharper_csharp_keep_existing_expr_member_arrangement                    = true
resharper_csharp_place_expr_method_on_single_line                         = if_owner_is_single_line
resharper_csharp_place_expr_property_on_single_line                       = if_owner_is_single_line
resharper_csharp_place_expr_accessor_on_single_line                       = if_owner_is_single_line
resharper_csharp_wrap_before_arrow_with_expressions                       = false
# arrangement of type parameters, contraints and base types
resharper_csharp_place_type_constraints_on_same_line                      = true
resharper_csharp_wrap_before_first_type_parameter_constraint              = false
resharper_csharp_wrap_multiple_type_parameter_constraints_style           = chop_if_long
resharper_csharp_wrap_before_type_parameter_langle                        = false
resharper_csharp_wrap_before_extends_colon                                = false
resharper_csharp_wrap_extends_list_style                                  = wrap_if_long
# arrangement of declaration blocks
resharper_csharp_keep_existing_declaration_block_arrangement              = false
resharper_csharp_place_abstract_accessorholder_on_single_line             = true
resharper_csharp_place_simple_accessorholder_on_single_line               = false
resharper_csharp_place_accessor_with_attrs_holder_on_single_line          = false
resharper_csharp_place_simple_accessor_on_single_line                     = true
resharper_csharp_place_simple_method_on_single_line                       = false
# arrangement of statements
resharper_csharp_new_line_before_while                                    = false
resharper_csharp_wrap_for_stmt_header_style                               = chop_if_long
resharper_csharp_wrap_multiple_declaration_style                          = chop_if_long
# arrangement of embedded statement
resharper_csharp_keep_existing_embedded_arrangement                       = true
resharper_csharp_place_simple_embedded_statement_on_same_line             = if_owner_is_single_line
resharper_csharp_place_simple_case_statement_on_same_line                 = never
# arrangement of embedded blocks
resharper_csharp_keep_existing_embedded_block_arrangement                 = false
resharper_csharp_place_simple_embedded_block_on_same_line                 = false
resharper_csharp_place_simple_anonymousmethod_on_single_line              = true
# arrangement of initializers
resharper_csharp_keep_existing_initializer_arrangement                    = true
resharper_csharp_place_simple_initializer_on_single_line                  = true
resharper_csharp_wrap_array_initializer_style                             = wrap_if_long
# arrangement of invocations
resharper_csharp_wrap_arguments_style                                     = wrap_if_long
resharper_csharp_wrap_before_invocation_lpar                              = false
resharper_csharp_wrap_after_invocation_lpar                               = false
# arrangement of member access expressions
resharper_csharp_wrap_after_dot_in_method_calls                           = false
resharper_csharp_wrap_chained_method_calls                                = wrap_if_long
# arrangement of binary expressions
resharper_csharp_wrap_before_binary_opsign                                = false
resharper_csharp_wrap_chained_binary_expressions                          = wrap_if_long
resharper_csharp_force_chop_compound_if_expression                        = false
resharper_csharp_force_chop_compound_while_expression                     = false
resharper_csharp_force_chop_compound_do_expression                        = false
# arrangement of ternary expressions
resharper_csharp_wrap_before_ternary_opsigns                              = true
resharper_csharp_wrap_ternary_expr_style                                  = chop_if_long
resharper_csharp_nested_ternary_style                                     = autodetect
# arrangement of linq expressions
resharper_csharp_wrap_linq_expressions                                    = chop_if_long
# spaces
# preserve existing formatting
resharper_csharp_extra_spaces                                             = remove_all
# before other parentheses
resharper_csharp_space_before_typeof_parentheses                          = false
resharper_csharp_space_before_default_parentheses                         = false
resharper_csharp_space_before_checked_parentheses                         = false
resharper_csharp_space_before_sizeof_parentheses                          = false
resharper_csharp_space_before_nameof_parentheses                          = false
resharper_csharp_space_between_keyword_and_expression                     = true
# within other parentheses
resharper_csharp_space_within_typeof_parentheses                          = false
resharper_csharp_space_within_default_parentheses                         = false
resharper_csharp_space_within_checked_parentheses                         = false
resharper_csharp_space_within_sizeof_parentheses                          = false
resharper_csharp_space_within_nameof_parentheses                          = false
# around angle brackets
resharper_csharp_space_before_type_parameter_angle                        = false
resharper_csharp_space_before_type_argument_angle                         = false
resharper_csharp_space_within_type_parameter_angles                       = false
resharper_csharp_space_within_type_argument_angles                        = false
# around braces
resharper_csharp_space_before_singleline_accessorholder                   = true
resharper_csharp_space_in_singleline_accessorholder                       = true
resharper_csharp_space_between_accessors_in_singleline_property           = true
resharper_csharp_space_within_empty_braces                                = true
resharper_csharp_space_in_singleline_method                               = true
resharper_csharp_space_in_singleline_anonymous_method                     = true
resharper_csharp_space_within_single_line_array_initializer_braces        = true
# around binary operators
resharper_csharp_space_around_arrow_op                                    = false
# around unary operators
resharper_csharp_space_after_logical_not_op                               = false
resharper_csharp_space_after_unary_minus_op                               = false
resharper_csharp_space_after_unary_plus_op                                = false
resharper_csharp_space_after_ampersand_op                                 = false
resharper_csharp_space_after_asterik_op                                   = false
resharper_csharp_space_near_postfix_and_prefix_op                         = false
# in ternary operator
resharper_csharp_space_before_ternary_quest                               = true
resharper_csharp_space_after_ternary_quest                                = true
resharper_csharp_space_before_ternary_colon                               = true
resharper_csharp_space_after_ternary_colon                                = true
# around command ans semicolon
resharper_csharp_space_before_semicolon                                   = false
# around colon
resharper_csharp_space_before_colon_in_case                               = false
resharper_csharp_space_before_type_parameter_constraint_colon             = true
resharper_csharp_space_after_type_parameter_constraint_colon              = true
resharper_csharp_space_before_attribute_colon                             = false
resharper_csharp_space_after_attribute_colon                              = true
# attributes
resharper_csharp_space_between_attribute_sections                         = true
resharper_csharp_space_after_attributes                                   = true
# other
resharper_csharp_space_around_lambda_arrow                                = true
resharper_csharp_space_before_pointer_asterik_declaration                 = false
resharper_csharp_space_before_nullable_mark                               = false
resharper_csharp_space_around_alias_eq                                    = false
resharper_csharp_space_before_trailing_comment                            = true
resharper_csharp_space_after_operator_keyword                             = true
# other
resharper_csharp_old_engine                                               = false


xmldoc_indent_style = space
xmldoc_indent_size = 2
resharper_xmldoc_wrap_tags_and_pi = false
resharper_xmldoc_spaces_around_eq_in_pi_attribute = false
resharper_xmldoc_space_after_last_pi_attribute = true
resharper_xmldoc_pi_attribute_style = do_not_touch
resharper_xmldoc_pi_attributes_indent = align_by_first_attribute
resharper_xmldoc_blank_line_after_pi = false
resharper_xmldoc_spaces_around_eq_in_attribute = false
resharper_xmldoc_space_after_last_attribute = true
resharper_xmldoc_space_before_self_closing = true
resharper_xmldoc_attribute_style = do_not_touch
resharper_xmldoc_attribute_indent = align_by_first_attribute
resharper_xmldoc_keep_user_linebreaks = true
resharper_xmldoc_linebreaks_inside_tags_for_multiline_elements = true
resharper_xmldoc_linebreaks_inside_tags_for_elements_with_child_elements = true
resharper_xmldoc_linebreaks_inside_tags_for_elements_longer_than = 1
resharper_xmldoc_spaces_inside_tags = false
resharper_xmldoc_wrap_text = true
resharper_xmldoc_wrap_around_elements = false
resharper_xmldoc_indent_child_elements = oneindent
resharper_xmldoc_indent_text = zeroindent
resharper_xmldoc_max_blank_lines_between_tags = false
resharper_xmldoc_linebreak_before_singleline_elements = false




# naming rules etc...

# const fields should be pascal cased
dotnet_naming_rule.constant_fields_should_be_pascal_case.severity         = suggestion
dotnet_naming_rule.constant_fields_should_be_pascal_case.symbols          = constant_fields
dotnet_naming_rule.constant_fields_should_be_pascal_case.style            = pascal_case_style

dotnet_naming_symbols.constant_fields.applicable_kinds                    = field
dotnet_naming_symbols.constant_fields.required_modifiers                  = const

dotnet_naming_style.pascal_case_style.capitalization                      = pascal_case



# private fields should be camel cased.
dotnet_naming_symbols.private_field_symbol.applicable_kinds               = field
dotnet_naming_symbols.private_field_symbol.applicable_accessibilities     = private

dotnet_naming_style.private_field_style.capitalization                    = camel_case

dotnet_naming_rule.private_fields_are_camel_case.severity                 = error
dotnet_naming_rule.private_fields_are_camel_case.symbols                  = private_field_symbol
dotnet_naming_rule.private_fields_are_camel_case.style                    = private_field_style



# non-private fields should be pascal cased
dotnet_naming_symbols.non_private_field_symbol.applicable_kinds           = field
dotnet_naming_symbols.non_private_field_symbol.applicable_accessibilities = public,internal,friend,protected,protected_internal,protected_friend

dotnet_naming_style.non_private_field_style.capitalization                = pascal_case

dotnet_naming_rule.non_private_fields_are_pascal_case.severity            = error
dotnet_naming_rule.non_private_fields_are_pascal_case.symbols             = non_private_field_symbol
dotnet_naming_rule.non_private_fields_are_pascal_case.style               = non_private_field_style



# parameters should be camel cased
dotnet_naming_symbols.parameter_symbol.applicable_kinds                   = parameter

dotnet_naming_style.parameter_style.capitalization                        = camel_case

dotnet_naming_rule.parameters_are_camel_case.severity                     = error
dotnet_naming_rule.parameters_are_camel_case.symbols                      = parameter_symbol
dotnet_naming_rule.parameters_are_camel_case.style                        = parameter_style



# type symbols (except interfaces) should be camel cased
dotnet_naming_symbols.non_interface_type_symbol.applicable_kinds          = class,struct,enum,delegate

dotnet_naming_style.non_interface_type_style.capitalization               = pascal_case

dotnet_naming_rule.non_interface_types_are_pascal_case.severity           = error
dotnet_naming_rule.non_interface_types_are_pascal_case.symbols            = non_interface_type_symbol
dotnet_naming_rule.non_interface_types_are_pascal_case.style              = non_interface_type_style



# interface symbol should be prefixed with I and pascal cased
dotnet_naming_symbols.interface_type_symbol.applicable_kinds              = interface

dotnet_naming_style.interface_type_style.capitalization                   = pascal_case
dotnet_naming_style.interface_type_style.required_prefix                  = I

dotnet_naming_rule.interface_types_must_be_prefixed_with_I.severity       = error
dotnet_naming_rule.interface_types_must_be_prefixed_with_I.symbols        = interface_type_symbol
dotnet_naming_rule.interface_types_must_be_prefixed_with_I.style          = interface_type_style



# member symbols should be pascal cased
dotnet_naming_symbols.member_symbol.applicable_kinds                      = method,property,event

dotnet_naming_style.member_style.capitalization                           = pascal_case

dotnet_naming_rule.members_are_pascal_case.severity                       = error
dotnet_naming_rule.members_are_pascal_case.symbols                        = member_symbol
dotnet_naming_rule.members_are_pascal_case.style                          = member_style


# internal and private fields should be camelCase and prefixed with _ (this goes against MS guidelines but this seems to be more common in the code)
dotnet_naming_rule.camel_case_for_private_internal_fields.severity        = suggestion
dotnet_naming_rule.camel_case_for_private_internal_fields.symbols         = private_internal_fields
dotnet_naming_rule.camel_case_for_private_internal_fields.style           = camel_case_underscore_style

dotnet_naming_symbols.private_internal_fields.applicable_kinds            = field
dotnet_naming_symbols.private_internal_fields.applicable_accessibilities  = private, internal

dotnet_naming_style.camel_case_underscore_style.required_prefix           = _
dotnet_naming_style.camel_case_underscore_style.capitalization            = camel_case
