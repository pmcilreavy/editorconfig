# If you wanna change a setting maybe drop a comment in slack to see what everyone thinks first.

# Some useful references...
# http://editorconfig.org/
# http://editorconfig.org/#supported-properties
# https://docs.microsoft.com/en-us/visualstudio/ide/create-portable-custom-editor-options
# https://docs.microsoft.com/en-us/visualstudio/ide/editorconfig-code-style-settings-reference
# https://docs.microsoft.com/en-us/visualstudio/ide/editorconfig-naming-conventions
# https://kent-boogaart.com/blog/editorconfig-reference-for-c-developers

root = true

[*]
indent_style = space

[*.{csproj,vbproj,vcxproj,vcxproj.filters,proj,projitems,shproj,props,targets,ruleset,config,nuspec,resx,vsixmanifest,vsct}]
indent_size = 2

[*.{xml,xaml}]
indent_size = 4

[*.json]
indent_size = 2

[*.{js,ts}]
indent_size = 4

[*.{html,htm}]
indent_size = 4

[*.cs]
# misc
dotnet_sort_system_directives_first                                       = true
max_line_length                                                           = 120

# indentation and white space
indent_size                                                               = 4
end_of_line                                                               = crlf
charset                                                                   = utf-8-bom
trim_trailing_whitespace                                                  = true
insert_final_newline                                                      = false
csharp_indent_block_contents                                              = true
csharp_indent_braces                                                      = false
csharp_indent_case_contents                                               = true
csharp_indent_labels                                                      = one_less_than_current
csharp_indent_switch_labels                                               = true
csharp_space_after_cast                                                   = false
csharp_space_after_colon_in_inheritance_clause                            = true
csharp_space_after_comma                                                  = true
csharp_space_after_dot                                                    = false
csharp_space_after_keywords_in_control_flow_statements                    = true
csharp_space_after_semicolon_in_for_statement                             = true
csharp_space_around_binary_operators                                      = before_and_after
csharp_space_around_declaration_statements                                = do_not_ignore
csharp_space_before_colon_in_inheritance_clause                           = true
csharp_space_before_comma                                                 = false
csharp_space_before_dot                                                   = false
csharp_space_before_open_square_brackets                                  = false
csharp_space_before_semicolon_in_for_statement                            = false
csharp_space_between_empty_square_brackets                                = false
csharp_space_between_method_call_empty_parameter_list_parentheses         = false
csharp_space_between_method_call_name_and_opening_parenthesis             = false
csharp_space_between_method_call_parameter_list_parentheses               = false
csharp_space_between_method_declaration_empty_parameter_list_parentheses  = false
csharp_space_between_method_declaration_name_and_open_parenthesis         = false
csharp_space_between_method_declaration_parameter_list_parentheses        = false
csharp_space_between_parentheses                                          = false
csharp_space_between_square_brackets                                      = false

# var usage
csharp_style_var_when_type_is_apparent                                    = true : suggestion
csharp_style_var_elsewhere                                                = true : suggestion
csharp_style_var_for_built_in_types                                       = true : suggestion

# Prefer method-like constructs to have a block body
csharp_style_expression_bodied_methods                                    = false : none
csharp_style_expression_bodied_constructors                               = false : none
csharp_style_expression_bodied_operators                                  = false : none

# Prefer property-like constructs to have an expression-body
csharp_style_expression_bodied_properties                                 = true : none
csharp_style_expression_bodied_indexers                                   = true : none
csharp_style_expression_bodied_accessors                                  = true : none

# Suggest more modern language features when available
csharp_style_pattern_matching_over_is_with_cast_check                     = true : suggestion
csharp_style_pattern_matching_over_as_with_null_check                     = true : suggestion
csharp_style_inlined_variable_declaration                                 = true : suggestion
csharp_style_throw_expression                                             = true : suggestion
csharp_style_conditional_delegate_call                                    = true : suggestion

# newline & brace settings
csharp_new_line_before_open_brace                                         = all
csharp_new_line_before_else                                               = true
csharp_new_line_before_catch                                              = true
csharp_new_line_before_finally                                            = true
csharp_new_line_before_members_in_object_initializers                     = true
csharp_new_line_before_members_in_anonymous_types                         = true
csharp_prefer_braces                                                      = true : error
csharp_preserve_single_line_blocks                                        = true
csharp_preserve_single_line_statements                                    = false
csharp_prefer_simple_default_expression                                   = true : suggestion
csharp_new_line_between_query_expression_clauses                          = true

# qualification with 'this' etc
dotnet_style_qualification_for_event                                      = false : warning
dotnet_style_qualification_for_field                                      = false : warning
dotnet_style_qualification_for_method                                     = false : warning
dotnet_style_qualification_for_property                                   = false : warning

# syntatic sugar preferences
dotnet_style_coalesce_expression                                          = true : suggestion
dotnet_style_collection_initializer                                       = true : suggestion
dotnet_style_explicit_tuple_names                                         = true : suggestion
dotnet_style_null_propagation                                             = true : suggestion
dotnet_style_object_initializer                                           = true : suggestion
dotnet_style_predefined_type_for_locals_parameters_members                = true : suggestion
dotnet_style_predefined_type_for_member_access                            = true : suggestion

# naming rules etc...

# const fields should be pascal cased
dotnet_naming_rule.constant_fields_should_be_pascal_case.severity         = suggestion
dotnet_naming_rule.constant_fields_should_be_pascal_case.symbols          = constant_fields
dotnet_naming_rule.constant_fields_should_be_pascal_case.style            = pascal_case_style

dotnet_naming_symbols.constant_fields.applicable_kinds                    = field
dotnet_naming_symbols.constant_fields.required_modifiers                  = const

dotnet_naming_style.pascal_case_style.capitalization                      = pascal_case



# private fields should be camel cased.
dotnet_naming_symbols.private_field_symbol.applicable_kinds               = field
dotnet_naming_symbols.private_field_symbol.applicable_accessibilities     = private

dotnet_naming_style.private_field_style.capitalization                    = camel_case

dotnet_naming_rule.private_fields_are_camel_case.severity                 = error
dotnet_naming_rule.private_fields_are_camel_case.symbols                  = private_field_symbol
dotnet_naming_rule.private_fields_are_camel_case.style                    = private_field_style



# non-private fields should be pascal cased
dotnet_naming_symbols.non_private_field_symbol.applicable_kinds           = field
dotnet_naming_symbols.non_private_field_symbol.applicable_accessibilities = public,internal,friend,protected,protected_internal,protected_friend

dotnet_naming_style.non_private_field_style.capitalization                = pascal_case

dotnet_naming_rule.non_private_fields_are_pascal_case.severity            = error
dotnet_naming_rule.non_private_fields_are_pascal_case.symbols             = non_private_field_symbol
dotnet_naming_rule.non_private_fields_are_pascal_case.style               = non_private_field_style



# parameters should be camel cased
dotnet_naming_symbols.parameter_symbol.applicable_kinds                   = parameter

dotnet_naming_style.parameter_style.capitalization                        = camel_case

dotnet_naming_rule.parameters_are_camel_case.severity                     = error
dotnet_naming_rule.parameters_are_camel_case.symbols                      = parameter_symbol
dotnet_naming_rule.parameters_are_camel_case.style                        = parameter_style



# type symbols (except interfaces) should be camel cased
dotnet_naming_symbols.non_interface_type_symbol.applicable_kinds          = class,struct,enum,delegate

dotnet_naming_style.non_interface_type_style.capitalization               = pascal_case

dotnet_naming_rule.non_interface_types_are_pascal_case.severity           = error
dotnet_naming_rule.non_interface_types_are_pascal_case.symbols            = non_interface_type_symbol
dotnet_naming_rule.non_interface_types_are_pascal_case.style              = non_interface_type_style



# interface symbol should be prefixed with I and pascal cased
dotnet_naming_symbols.interface_type_symbol.applicable_kinds              = interface

dotnet_naming_style.interface_type_style.capitalization                   = pascal_case
dotnet_naming_style.interface_type_style.required_prefix                  = I

dotnet_naming_rule.interface_types_must_be_prefixed_with_I.severity       = error
dotnet_naming_rule.interface_types_must_be_prefixed_with_I.symbols        = interface_type_symbol
dotnet_naming_rule.interface_types_must_be_prefixed_with_I.style          = interface_type_style



# member symbols should be pascal cased
dotnet_naming_symbols.member_symbol.applicable_kinds                      = method,property,event

dotnet_naming_style.member_style.capitalization                           = pascal_case

dotnet_naming_rule.members_are_pascal_case.severity                       = error
dotnet_naming_rule.members_are_pascal_case.symbols                        = member_symbol
dotnet_naming_rule.members_are_pascal_case.style                          = member_style


# internal and private fields should be camelCase and prefixed with _ (this goes against MS guidelines but this seems to be more common in the code)
dotnet_naming_rule.camel_case_for_private_internal_fields.severity        = suggestion
dotnet_naming_rule.camel_case_for_private_internal_fields.symbols         = private_internal_fields
dotnet_naming_rule.camel_case_for_private_internal_fields.style           = camel_case_underscore_style

dotnet_naming_symbols.private_internal_fields.applicable_kinds            = field
dotnet_naming_symbols.private_internal_fields.applicable_accessibilities  = private, internal

dotnet_naming_style.camel_case_underscore_style.required_prefix           = _
dotnet_naming_style.camel_case_underscore_style.capitalization            = camel_case
